-- LEVEL - 4

-- Find the book(s) with the highest price.

select top 1 * from Books order by price desc

select * from books where price in (select max(price) from Books)


-- Show customers who ordered books priced above the average price.

select c.customer_id, c.first_name, c.last_name , b.price
from Customers c
JOIN Orders o on c.customer_id = o.customer_id
JOIN Books b on o.book_id = b.Book_id
where b.price > (select AVG(price) from Books)



-- Find customers who have never placed an order.

select customer_id from Customers where customer_id not in (select customer_id from orders)


-- Display books whose stock_quantity is below the average stock.

select * from Books

select * from Books where stock_quantity < (select AVG(stock_quantity) from Books )

-- Show the details of the most expensive order placed.

select top 1 c.first_name, (b.price * o.quantity) as total_price
from Customers c
JOIN Orders o on c.customer_id = o.customer_id
JOIN Books b on o.book_id = b.Book_id
order by total_price desc 


select c.first_name, SUM(b.price * o.quantity) as total_price
from Customers c
JOIN Orders o on c.customer_id = o.customer_id
JOIN Books b on o.book_id = b.Book_id
group by c.first_name
